# Generated by Django 3.2.18 on 2023-04-20 10:20

from django.contrib.auth import get_user_model
from django.contrib.auth.management import create_permissions
from django.db import migrations

from tools.models import OrganizationMember

User = get_user_model()

# https://stackoverflow.com/a/40092780/1336275
def migrate_permissions(apps, schema_editor):
    for app_config in apps.get_app_configs():
        app_config.models_module = True
        create_permissions(app_config, apps=apps, verbosity=0)
        app_config.models_module = None


def add_group_permissions(apps, schema_editor):
    Group = apps.get_model("auth", "Group")
    Permission = apps.get_model("auth", "Permission")
    try:
        redteam = Group.objects.get(name="redteam")
        admin = Group.objects.get(name="admin")
        redteam.permissions.add(Permission.objects.get(codename="can_view_redteam_onboarding"))
        admin.permissions.add(Permission.objects.get(codename="can_view_admin_onboarding"))
        admin.permissions.add(Permission.objects.get(codename="add_indemnification"))
    except Group.DoesNotExist:
        pass


def migrate_user_groups_to_organizationmember(apps, schema_editor):
    members = OrganizationMember.objects.all()
    for member in members:
        user_groups = member.user.groups.all()
        for group in user_groups:
            member.groups.add(group)


def clear_group_from_users(apps, schema_editor):
    users = User.objects.all()
    for user in users:
        user.groups.clear()


class Migration(migrations.Migration):
    dependencies = [
        ("tools", "0033_auto_20230420_1016", "contenttypes", "0002_remove_content_type_name"),
    ]

    operations = [
        migrations.RunPython(migrate_permissions),
        migrations.RunPython(add_group_permissions),
        migrations.RunPython(migrate_user_groups_to_organizationmember),
        migrations.RunPython(clear_group_from_users),
    ]
