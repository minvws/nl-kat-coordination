# Generated by Django 5.0.14 on 2025-05-08 10:25
from django.contrib.auth.management import create_permissions
from django.core.exceptions import ObjectDoesNotExist
from django.db import migrations


# https://stackoverflow.com/a/40092780/1336275
def migrate_permissions(apps, schema_editor):
    for app_config in apps.get_app_configs():
        app_config.models_module = True
        create_permissions(app_config, apps=apps, verbosity=0)
        app_config.models_module = None


def get_permissions(apps, codenames) -> list[str]:
    Permission = apps.get_model("auth", "Permission")
    permission_ids = []
    if codenames:
        for codename in codenames:
            try:
                permission = Permission.objects.get(codename=codename)
            except Permission.DoesNotExist:
                raise ObjectDoesNotExist("Permission:" + codename + " does not exist.")
            else:
                permission_ids.append(permission.id)

    return permission_ids


def add_dashboard_permissions_to_groups(apps, _):
    Group = apps.get_model("auth", "Group")
    dashboard_permissions = [
        "add_dashboard",
        "change_dashboard",
        "delete_dashboard",
        "view_dashboard",
        "add_dashboarddata",
        "change_dashboarddata",
        "delete_dashboarddata",
        "view_dashboarddata",
    ]

    dashboard_permissions = get_permissions(apps, dashboard_permissions)

    try:
        admin_group = Group.objects.get(name="admin")
        redteam_group = Group.objects.get(name="redteam")

        admin_group.permissions.set(dashboard_permissions)
        redteam_group.permissions.set(dashboard_permissions)
    except Group.DoesNotExist:
        pass


class Migration(migrations.Migration):
    dependencies = [("crisis_room", "0003_alter_dashboarddata_unique_together_and_more")]

    operations = [migrations.RunPython(migrate_permissions), migrations.RunPython(add_dashboard_permissions_to_groups)]
