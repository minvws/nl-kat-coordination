# Generated by Django 5.0.14 on 2025-05-07 10:36

import structlog
from django.contrib.auth.management import create_permissions
from django.db import migrations
from tools.models import GROUP_ADMIN, GROUP_REDTEAM

logger = structlog.get_logger(__name__)


def migrate_permissions(apps, _schema_editor):
    for app_config in apps.get_app_configs():
        app_config.models_module = True
        create_permissions(app_config, apps=apps, verbosity=0)
        app_config.models_module = None


def get_permissions(apps, codenames):
    Permission = apps.get_model("auth", "Permission")
    permissions = []

    for codename in codenames:
        try:
            permission = Permission.objects.get(codename=codename)
            permissions.append(permission)
        except Permission.DoesNotExist:
            logger.error("Permission code '%s' not found.", codename)
            continue

    return permissions


def add_dashboard_permissions_to_groups(apps, _schema_editor):
    Group = apps.get_model("auth", "Group")

    dashboard_permissions = [
        "add_dashboard",
        "change_dashboard",
        "delete_dashboard",
        "view_dashboard",
        "add_dashboarddata",
        "change_dashboarddata",
        "delete_dashboarddata",
        "view_dashboarddata",
        "change_dashboarddata_position",
    ]

    dashboard_permissions = get_permissions(apps, dashboard_permissions)

    try:
        admin_group = Group.objects.get(name=GROUP_ADMIN)
        redteam_group = Group.objects.get(name=GROUP_REDTEAM)

        for dashboard_permission in dashboard_permissions:
            admin_group.permissions.add(dashboard_permission)
            redteam_group.permissions.add(dashboard_permission)

    except Group.DoesNotExist:
        pass


class Migration(migrations.Migration):
    dependencies = [("crisis_room", "0004_change_name_findings_dashboard")]

    operations = [migrations.RunPython(migrate_permissions), migrations.RunPython(add_dashboard_permissions_to_groups)]
