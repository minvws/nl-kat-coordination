name: Mula package scheduler

on:
  push:
    tags:
      - v*

jobs:
  build:

    runs-on: ubuntu-20.04

    steps:
      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: '3.8'
          cache: 'pip' # caching pip dependencies

      - name: Replace version number with release version
        run: find . -type f -name 'version.py' -exec sed -ibak "s/__version__ = .*/__version__ = \"${RELEASE_VERSION}\"/" {} \;
        working-directory: ./mula

      - name: prep
        run: sudo mkdir -p /var/www/html

      - name: prep chown
        run: sudo chown `id -u`:`id -g` /var/www/html

      - name: copy project to run location.
        run: cp -r * /var/www/html
        working-directory: ./mula

      - name: Create scheduler release archive
        run:  tar -cvzf ../../scheduler_${{ env.RELEASE_VERSION }}.tar.gz --exclude=./.git* --exclude=Makefile --exclude=Dockerfile --exclude=base.yml --exclude=requirements* --exclude=tests .
        working-directory: ./mula

      - name: Upload scheduler release
        uses: actions/upload-artifact@v1
        with:
          name: scheduler_${{ env.RELEASE_VERSION }}
          path: ../scheduler_${{ env.RELEASE_VERSION }}.tar.gz

      - name: Create virtual env
        run: python3.8 -m venv /var/www/html/.venv

      - name: Install requirements
        run: source .venv/bin/activate; pip install --upgrade pip; pip install --requirement requirements.txt
        working-directory: /var/www/html

      - name: Create venv archive
        run: tar -zcvf scheduler_venv_${{ env.RELEASE_VERSION }}.tar.gz -C /var/www/html/ .venv

      - name: Upload venv archive
        uses: actions/upload-artifact@v1
        with:
          name: scheduler_venv_${{ env.RELEASE_VERSION }}
          path: scheduler_venv_${{ env.RELEASE_VERSION }}.tar.gz
