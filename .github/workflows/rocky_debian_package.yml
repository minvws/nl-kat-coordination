name: Rocky Build Debian and Ubuntu packages

on:
  push:
    paths:
      - octopoes/**
      - rocky/**
      - .github/workflows/rocky_debian_package.yml
  pull_request:
    paths:
      - octopoes/**
      - rocky/**
      - .github/workflows/rocky_debian_package.yml

jobs:
  build-package:
    strategy:
      matrix:
        dist: [debian, ubuntu]
    runs-on: ubuntu-latest
    env:
      PKG_NAME: kat-rocky

    steps:
      - uses: actions/checkout@v3

      - name: Generate version.py and set RELEASE_VERSION
        run: |
          pip install setuptools-scm==7.1.0
          echo "RELEASE_VERSION=$(python -m setuptools_scm | sed s/rc/~rc/)" >> $GITHUB_ENV
          cp _version.py rocky/rocky/version.py

      - name: Run debian package build
        uses: addnab/docker-run-action@v3
        with:
          run: packaging/scripts/build-debian-package.sh
          registry: ghcr.io
          image: ghcr.io/minvws/nl-kat-${{ matrix.dist }}-build-image:latest
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          options: -v ${{ github.workspace }}/rocky:/app
            -v ${{ github.workspace }}/octopoes:/octopoes
            -e REPOSITORY=${{ github.repository }}
            -e RELEASE_VERSION=${{ env.RELEASE_VERSION }}
            -e RELEASE_TAG=${{ env.RELEASE_TAG }}
            -e PKG_NAME=${{ env.PKG_NAME }}
            --workdir /app

      - name: Upload .deb to artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{env.PKG_NAME}}_${{ env.RELEASE_VERSION }}_${{ matrix.dist }}.deb
          path: rocky/build/${{env.PKG_NAME}}_${{ env.RELEASE_VERSION }}_amd64.deb
