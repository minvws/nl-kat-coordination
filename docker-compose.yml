services:
  redis:
    restart: unless-stopped
    image: docker.io/library/redis:8.0.3-alpine
    ports:
      - "127.0.0.1:6379:6379"
    command:
      - /bin/sh
      - -c
      - redis-server --requirepass "$${REDIS_PASSWORD}"
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 5s
      retries: 10
    env_file:
      - .env

  postgres:
    restart: unless-stopped
    image: docker.io/library/postgres:15
    shm_size: 256MB
    ports:
      - "127.0.0.1:5432:5432"
    healthcheck:
      test: ["CMD", "gosu", "postgres", "pg_isready"]
      interval: 10s
      retries: 10
    # Django runserver does not limit the number of threads. We need to increase
    # the maximum number of connection to make sure that we don't hit the limit.
    command: -c max_connections=500
    volumes:
      - postgres-data:/var/lib/postgresql/data
    env_file:
      - .env

  xtdb:
    image: "ghcr.io/dekkers/xtdb-http-multinode:main"
    restart: unless-stopped
    ports:
      - "127.0.0.1:3000:3000"
    volumes:
      - xtdb-data:/var/lib/xtdb

  openkat:
    restart: unless-stopped
    depends_on:
      - postgres
      - xtdb
    ports:
      - "127.0.0.1:8000:8000"
    build:
      target: dev
      args:
        ENVIRONMENT: dev
    command: python3 manage.py runserver 0.0.0.0:8000
    volumes:
      - ./:/app/openkat
      - /var/run/docker.sock:/var/run/docker.sock
    env_file:
      - .env
    environment:
      - HOST_MOUNT_DIR=${PWD}
    networks:
      - default
      - plugins

  worker:
    restart: unless-stopped
    depends_on:
      - postgres
      - xtdb
    build:
      target: dev
      args:
        ENVIRONMENT: dev
    volumes:
      - ./:/app/openkat
      - /var/run/docker.sock:/var/run/docker.sock
    command: python manage.py celery_reload_worker "celery -A tasks worker -B -s /tmp/celerybeat-schedule --loglevel=INFO"
    env_file:
      - .env
    environment:
      - DATABASE_MIGRATION=false
      - HOST_MOUNT_DIR=${PWD}

networks:
  default:
    enable_ipv6: true
    ipam:
      config:
        - subnet: 2001:db8:d0ca::/64
        - subnet: 172.29.0.0/16
          gateway: 172.29.0.1
  plugins:
    enable_ipv6: true
    ipam:
      config:
        - subnet: 2001:db8:d0cb::/64
        - subnet: 172.28.0.0/16
          gateway: 172.28.0.1

volumes:
  postgres-data:
  bytes-data:
  xtdb-data:
