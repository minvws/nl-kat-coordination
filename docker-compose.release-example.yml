# You should use this file in the following manner:
# `docker compose --env-file .env-prod -f docker-compose.release-example.yml`

services:
  rabbitmq:
    restart: on-failure
    image: "docker.io/library/rabbitmq:3.12-management"
    ports:
      - "127.0.0.1:5672:5672"
      - "127.0.0.1:15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 5s
      retries: 10
    env_file:
      - .env-prod
      - .env

  postgres:
    image: docker.io/library/postgres:15
    shm_size: 256MB
    ports:
      - "0.0.0.0:5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init-user-db.sh:/docker-entrypoint-initdb.d/init-user-db.sh
    env_file:
      - .env-prod
      - .env
    environment:
      APPS: "ROCKY BYTES KATALOGUS SCHEDULER"

  crux:
    image: "ghcr.io/dekkers/xtdb-http-multinode:v1.0.8"
    restart: on-failure
    ports:
      - "127.0.0.1:3000:3000"
    volumes:
      - xtdb-data:/var/lib/xtdb

  octopoes_api:
    restart: on-failure
    depends_on:
      - crux
    ports:
      - "127.0.0.1:8001:80"
    image: "ghcr.io/minvws/nl-kat-octopoes:${KAT_VERSION}"
    command: web
    env_file:
      - .env-prod
      - .env

  octopoes_api_worker:
    restart: on-failure
    depends_on:
      - crux
      - rabbitmq
    image: "ghcr.io/minvws/nl-kat-octopoes:${KAT_VERSION}"
    command: worker-beat
    env_file:
      - .env-prod
      - .env
    ulimits:
      nofile:
        soft: 262144
        hard: 262144

  boefje:
    restart: on-failure
    depends_on:
      - rabbitmq
      - bytes
    image: "ghcr.io/minvws/nl-kat-boefjes:${KAT_VERSION}"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    deploy:
      replicas: 1
    command: boefje
    env_file:
      - .env-prod
      - .env
    environment:
      - BOEFJES_DOCKER_NETWORK=${COMPOSE_PROJECT_NAME:-nl-kat-coordination}_default

  normalizer:
    restart: on-failure
    depends_on:
      - rabbitmq
      - bytes
    image: "ghcr.io/minvws/nl-kat-boefjes:${KAT_VERSION}"
    deploy:
      replicas: 1
    command: normalizer
    env_file:
      - .env-prod
      - .env

  rocky:
    restart: on-failure
    depends_on:
      - octopoes_api_worker
      - octopoes_api
      - postgres
      - boefje
      - normalizer
      - katalogus
      - scheduler
    ports:
      - "127.0.0.1:8000:8000"
    image: "ghcr.io/minvws/nl-kat-rocky:${KAT_VERSION}"
    env_file:
      - .env-prod
      - .env
    environment:
      - DATABASE_MIGRATION=true

  bytes:
    restart: on-failure
    depends_on:
      - postgres
    ports:
      - "127.0.0.1:8002:8000"
    image: "ghcr.io/minvws/nl-kat-bytes:${KAT_VERSION}"
    env_file:
      - .env-prod
      - .env
    environment:
      - BYTES_DATA_DIR=/data
    volumes:
      - bytes-data:/data

  katalogus:
    restart: on-failure
    depends_on:
      - postgres
    image: "ghcr.io/minvws/nl-kat-boefjes:${KAT_VERSION}"
    command: katalogus
    ports:
      - "127.0.0.1:8003:8000"
    env_file:
      - .env-prod
      - .env
    environment:
      - DATABASE_MIGRATION=true

  scheduler:
    restart: on-failure
    image: "ghcr.io/minvws/nl-kat-mula:${KAT_VERSION}"
    ports:
      - "127.0.0.1:8004:8000"
    env_file:
      - .env-prod
      - .env
    depends_on:
      - postgres
      - boefje
      - normalizer
      - octopoes_api
      - katalogus

  keiko:
    restart: on-failure
    image: "ghcr.io/minvws/nl-kat-keiko:${KAT_VERSION}"
    ports:
      - "127.0.0.1:8005:8000"
    env_file:
      - .env-prod
      - .env

volumes:
  postgres-data:
  bytes-data:
  xtdb-data:
