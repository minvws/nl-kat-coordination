[
  {
    "plugin_id": "dns",
    "name": "DNS",
    "description": "Fetch the DNS record(s) of a hostname.",
    "scan_level": 1,
    "oci_image": "ghcr.io/minvws/openkat/plugins:latest",
    "oci_arguments": [
      "uv",
      "run",
      "kat_dns/main.py",
      "{hostname}"
    ]
  },
  {
    "plugin_id": "dns-sec",
    "name": "DNSSEC",
    "description": "Validates DNSSEC of a hostname by checking the cryptographic signatures.",
    "scan_level": 1,
    "oci_image": "noamblitz/drill:latest",
    "oci_arguments": [
      "sh",
      "-c",
      "run () { D=$(drill -DT $1 $2); (! echo \"$D\" | grep -F \"[U] No data found for: $1. type $2\") && echo \"$D\" ; }; run {hostname} A || run {hostname} AAAA || run {hostname} CNAME"
    ]
  },
  {
    "plugin_id": "parse-dns-sec",
    "name": "Parse DNSSEC",
    "description": "Parse DNSSEC Output",
    "scan_level": 1,
    "consumes": [
      "file:dns-sec"
    ],
    "oci_image": "ghcr.io/minvws/openkat/plugins:latest",
    "oci_arguments": [
      "uv",
      "run",
      "kat_dnssec/main.py",
      "{file}"
    ]
  },
  {
    "plugin_id": "nmap",
    "name": "Nmap",
    "description": "Defaults to top 250 TCP ports. Includes service detection.",
    "scan_level": 2,
    "oci_image": "instrumentisto/nmap",
    "oci_arguments": [
      "nmap",
      "--open",
      "--top-ports",
      "250",
      "-T4",
      "-Pn",
      "-r",
      "-v10",
      "-sV",
      "-sS",
      "-oX",
      "-",
      "{ipaddress|hostname}"
    ]
  },
  {
    "plugin_id": "nmap-udp",
    "name": "Nmap UDP",
    "description": "Defaults to top 250 TCP ports. Includes service detection.",
    "scan_level": 2,
    "oci_image": "instrumentisto/nmap",
    "oci_arguments": [
      "nmap",
      "--open",
      "--top-ports",
      "250",
      "-T4",
      "-Pn",
      "-r",
      "-v10",
      "-sV",
      "-sU",
      "-oX",
      "-",
      "{ipaddress|hostname}"
    ]
  },
  {
    "plugin_id": "parse-nmap",
    "name": "Parse NMAP XML",
    "description": "Parses data from all nmap variants into IP-addresses, ports and services.",
    "scan_level": 2,
    "consumes": [
      "file:nmap",
      "file:masscan"
    ],
    "oci_image": "ghcr.io/minvws/openkat/plugins:latest",
    "oci_arguments": [
      "uv",
      "run",
      "kat_nmap/main.py",
      "{file}"
    ]
  },
  {
    "plugin_id": "citrix-bleed",
    "name": "CitrixBleed",
    "scan_level": 4,
    "oci_image": "ghcr.io/astral-sh/uv:python3.13-alpine",
    "oci_arguments": [
      "uv",
      "run",
      "--with",
      "requests",
      "https://raw.githubusercontent.com/RickGeex/CVE-2025-5777-CitrixBleed/refs/heads/main/CVE-2025-5777.py",
      "{hostname}"
    ]
  },
  {
    "plugin_id": "rpki-download",
    "name": "RPKI download",
    "scan_level": 1,
    "oci_image": "datacatering/duckdb:v1.3.2",
    "oci_arguments": [
      "/duckdb",
      "-c",
      "copy(select x.asn, x.prefix from (select unnest(roas) as x from read_json('https://console.rpki-client.org/vrps.json', maximum_object_size=100000000))) to '/dev/stdout' (format parquet);"
    ]
  },
  {
    "plugin_id": "bgp-download",
    "name": "BGP download",
    "scan_level": 1,
    "oci_image": "datacatering/duckdb:v1.3.2",
    "oci_arguments": [
      "/duckdb",
      "-c",
      "copy(select CIDR, ASN from read_json('https://bgp.tools/table.jsonl', maximum_object_size=100000000)) to '/dev/stdout' (format parquet);"
    ]
  },
  {
    "plugin_id": "nuclei-tls-version",
    "name": "Nuclei TLS Version",
    "scan_level": 2,
    "oci_image": "projectdiscovery/nuclei:v3.4.10",
    "oci_arguments": [
      "nuclei",
      "-t",
      "ssl/tls-version.yaml",
      "-j",
      "-u",
      "{hostname}"
    ]
  },
  {
    "plugin_id": "nuclei-expired-ssl",
    "name": "Nuclei Expired TLS Certificate",
    "scan_level": 2,
    "oci_image": "projectdiscovery/nuclei:v3.4.10",
    "oci_arguments": [
      "nuclei",
      "-t",
      "ssl/expired-ssl.yaml",
      "-j",
      "-u",
      "{hostname}"
    ]
  },
  {
    "plugin_id": "nuclei-tls-version-bulk",
    "name": "Nuclei TLS Version bulk",
    "scan_level": 2,
    "consumes": [
      "type:hostname"
    ],
    "oci_image": "projectdiscovery/nuclei:v3.4.10",
    "oci_arguments": [
      "nuclei",
      "-t",
      "ssl/tls-version.yaml",
      "-j"
    ]
  },
  {
    "plugin_id": "subfinder",
    "name": "Subfinder",
    "description": "A subdomain discovery tool. (projectdiscovery.io). Returns valid subdomains for websites using passive online sources. Beware that many of the online sources require their own API key to get more accurate data.",
    "scan_level": 1,
    "oci_image": "projectdiscovery/subfinder:v2.6.6",
    "oci_arguments": [
      "subfinder",
      "-silent",
      "-active",
      "-rate-limit",
      "0",
      "-json",
      "-d",
      "{hostname}"
    ]
  },
  {
    "plugin_id": "subfinder-bulk",
    "name": "Subfinder Bulk",
    "description": "A subdomain discovery tool. (projectdiscovery.io). Returns valid subdomains for websites using passive online sources. Beware that many of the online sources require their own API key to get more accurate data.",
    "scan_level": 1,
    "consumes": [
      "type:hostname"
    ],
    "oci_image": "projectdiscovery/subfinder:v2.6.6",
    "oci_arguments": [
      "subfinder",
      "-silent",
      "-active",
      "-rate-limit",
      "0",
      "-json"
    ]
  },
  {
    "plugin_id": "parse-subfinder",
    "name": "Parse Subfinder hostnames",
    "consumes": [
      "file:subfinder",
      "file:subfinder-bulk"
    ],
    "oci_image": "ghcr.io/minvws/openkat/plugins:latest",
    "oci_arguments": [
      "sh",
      "-c",
      "uv run cat.py {file} | jq .host -r | uv run store.py -h"
    ]
  },
  {
    "plugin_id": "masscan",
    "name": "Masscan",
    "scan_level": 2,
    "oci_image": "adarnimrod/masscan:latest",
    "oci_arguments": [
      "masscan",
      "--open",
      "-p",
      "80,443",
      "--max-rate",
      "100",
      "-oX",
      "-",
      "{ipaddress}"
    ]
  },
  {
    "plugin_id": "parse-nuclei-tls-version",
    "name": "Nuclei Findings",
    "description": "Parses nuclei tls version data to create KATFindings.",
    "consumes": [
      "file:nuclei-tls-version",
      "file:nuclei-tls-version-bulk"
    ],
    "oci_image": "ghcr.io/minvws/openkat/plugins:latest",
    "oci_arguments": [
      "sh",
      "-c",
      "uv run cat.py {file} | grep \"{.*}\" | jq '[.\"extracted-results\"[], .host] | @tsv' -r | sed -e 's/tls12/KAT-TLS-1.2-SUPPORT/g' -e 's/tls13/KAT-TLS-1.3-SUPPORT/g' | grep KAT | uv run store.py -f -t hostname"
    ]
  }
]
