# Generated by Django 5.2.6 on 2025-09-17 16:20

import django.core.validators
import django.db.models.deletion
import tagulous.models.fields
import tagulous.models.models
from django.conf import settings
from django.db import migrations, models

import openkat.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='The name of the organisation', max_length=126, unique=True)),
                ('code', openkat.models.LowerCaseSlugField(allow_unicode=True, help_text='A slug containing only lower-case unicode letters, numbers, hyphens or underscores that will be used in URLs and paths', max_length=32, unique=True)),
            ],
            options={
                'permissions': (('can_switch_organization', 'Can switch organization'), ('can_scan_organization', 'Can scan organization'), ('can_enable_disable_plugin', 'Can enable or disable boefje'), ('can_add_boefje', 'Can add new or duplicate boefjes'), ('can_set_clearance_level', 'Can set clearance level'), ('add_ooi', 'Add oois'), ('can_delete_oois', 'Can delete oois'), ('can_mute_findings', 'Can mute findings'), ('can_view_katalogus_settings', 'Can view KAT-alogus settings'), ('can_set_katalogus_settings', 'Can set KAT-alogus settings'), ('can_recalculate_bits', 'Can recalculate bits'), ('can_access_all_organizations', 'Can access all organizations'), ('can_enable_disable_schedule', 'Can enable or disable schedules')),
            },
        ),
        migrations.CreateModel(
            name='Indemnification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('organization', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='openkat.organization')),
            ],
        ),
        migrations.CreateModel(
            name='OrganizationTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('slug', models.SlugField()),
                ('count', models.IntegerField(default=0, help_text='Internal counter of how many times this tag is in use')),
                ('protected', models.BooleanField(default=False, help_text='Will not be deleted when the count reaches 0')),
                ('path', models.TextField()),
                ('label', models.CharField(help_text='The name of the tag, without ancestors', max_length=255)),
                ('level', models.IntegerField(default=1, help_text='The level of the tag in the tree')),
                ('color', models.CharField(choices=[('color-1-light', 'Blue light'), ('color-1-medium', 'Blue medium'), ('color-1-dark', 'Blue dark'), ('color-2-light', 'Green light'), ('color-2-medium', 'Green medium'), ('color-2-dark', 'Green dark'), ('color-3-light', 'Yellow light'), ('color-3-medium', 'Yellow medium'), ('color-3-dark', 'Yellow dark'), ('color-4-light', 'Orange light'), ('color-4-medium', 'Orange medium'), ('color-4-dark', 'Orange dark'), ('color-5-light', 'Red light'), ('color-5-medium', 'Red medium'), ('color-5-dark', 'Red dark'), ('color-6-light', 'Violet light'), ('color-6-medium', 'Violet medium'), ('color-6-dark', 'Violet dark')], default='color-1-light', max_length=20)),
                ('border_type', models.CharField(choices=[('plain', 'Plain'), ('solid', 'Solid'), ('dashed', 'Dashed'), ('dotted', 'Dotted')], default='plain', max_length=20)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='openkat.organizationtag')),
            ],
            options={
                'ordering': ('name',),
                'abstract': False,
                'unique_together': {('slug', 'parent')},
            },
            bases=(tagulous.models.models.BaseTagTreeModel, models.Model),
        ),
        migrations.AddField(
            model_name='organization',
            name='tags',
            field=tagulous.models.fields.TagField(_set_tag_meta=True, blank=True, force_lowercase=True, help_text='Enter a comma-separated tag string', protect_all=True, to='openkat.organizationtag', tree=True),
        ),
        migrations.CreateModel(
            name='OrganizationMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('active', 'active'), ('new', 'new')], default='new', max_length=64)),
                ('blocked', models.BooleanField(default=False)),
                ('onboarded', models.BooleanField(default=False)),
                ('trusted_clearance_level', models.IntegerField(default=-1, validators=[django.core.validators.MinValueValidator(-1), django.core.validators.MaxValueValidator(4)])),
                ('acknowledged_clearance_level', models.IntegerField(default=-1, validators=[django.core.validators.MinValueValidator(-1), django.core.validators.MaxValueValidator(4)])),
                ('groups', models.ManyToManyField(blank=True, to='auth.group')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='members', to='openkat.organization')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='members', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'organization')},
            },
        ),
    ]
