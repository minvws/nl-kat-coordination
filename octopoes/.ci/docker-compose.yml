services:
  rabbitmq:
    restart: on-failure
    image: "docker.io/library/rabbitmq:3.12-management"
    ports:
      - "127.0.0.1:29003:15672"
      - "127.0.0.1:29004:5672"
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 5s
      retries: 4
    env_file:
      - ".ci/ci.env"

  octopoes_integration:
    build:
      args:
        ENVIRONMENT: dev
      context: .
    command: pytest tests/integration --timeout=300
    depends_on:
      - xtdb
      - ci_octopoes
    env_file:
      - ".ci/ci.env"

  xtdb:
    image: "ghcr.io/dekkers/xtdb-http-multinode:v1.0.8"
    ports:
      - "127.0.0.1:29002:3000"

  ci_octopoes:
    build:
      context: .
    command: uvicorn octopoes.api.api:app --host 0.0.0.0 --port 80
    depends_on:
      rabbitmq:
        condition: service_healthy
      xtdb:
        condition: service_started
      katalogus_mock:
        condition: service_started
      ci_octopoes_api_worker:
        condition: service_started
    env_file:
      - ".ci/ci.env"
    ports:
      - "127.0.0.1:29000:80"

  ci_octopoes_api_worker:
    build:
      context: .
    command: celery -A octopoes.tasks.tasks worker -E --loglevel=INFO
    depends_on:
      rabbitmq:
        condition: service_healthy
      xtdb:
        condition: service_started
    env_file:
      - ".ci/ci.env"
    ulimits:
      nofile:
        soft: 262144
        hard: 262144

  katalogus_mock:
    image: "docker.io/wiremock/wiremock:2.34.0"
    volumes:
      - ./.ci/wiremock:/home/wiremock
    ports:
      - "127.0.0.1:29001:8080"
    env_file:
      - ".ci/ci.env"
