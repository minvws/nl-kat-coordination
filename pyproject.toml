[tool.black]
target-version = ["py310", "py311"]
line-length = 120

[tool.mypy]
python_version = "3.10"
plugins = ["pydantic.mypy"]
strict = false
ignore_missing_imports = true
follow_imports = "skip"
disallow_untyped_decorators = false # Needed for FastAPI decorators

[tool.setuptools_scm]
write_to = "_version.py"

[tool.vulture]
min_confidence = 90
exclude = ["/tests/", "*venv*"]
paths = ["."]


[tool.ruff]
# Enable classic flake8, pyflakes, eradicate, and tidyimport
# To be extended with DJ, PT, RUF, C90, D, PL, RET
select = ["E", "F", "ERA", "W", "TID", "I", "G", "INP", "T20", "UP", "ISC", "PTH", "SIM", "PLC", "A", "S"]
ignore = [
     "UP006", # Is not compatible with Python 3.8
     "UP007", # Is not compatible with Python 3.8
     "UP035", # Ignored temporarily until we've updated typing to Python 3.10
     "UP038", # Ignored temporarily until we've updated typing to Python 3.10
     "A003", # Built-in shadowing is usually not a problem and some built-ins have very generic names
     "SIM108", # Ternary operator is not always more readable
     "S101", # Assert use is normal in pytest tests
     "S104", # Binding to all is normal in containers
     "S105", # Disabled because of false positives
     "S106", # Disabled because of false positives
     "S308", # Mark_safe usage is okay
     "S324", # Insecure hash functions can still be useful
     "S603", # Disabled because of false positives
     "S607", # Disabled because of false positives
]
fix = true

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "old",
    "dist",
    "node_modules",
    "venv",
    "__pycache__"

]

# Same as Black.
line-length = 120

# Support Python 3.10 and higher
target-version = "py310"

# Add "Example" to allowed code comments
task-tags = ["Example", "todo", "TODO", "FIXME"]


[tool.ruff.per-file-ignores]
"__init__.py" = ["F401","F403"]
"whitelist.py" = ["F821", "INP"]
"rocky/*/migrations/*.py" = ["E501"]
"octopoes/bits/check_csp_header/check_csp_header.py" = ["ERA001"]
"boefjes/boefjes/plugins/kat_binaryedge/http_web/normalize.py" = ["ERA001"]
"*/packaging/*" = ["INP"]
"*/.ci/*" = ["INP"]
"conf.py" = ["INP", "PTH", "A"]
"conftest.py" = ["INP"]
"setup.py" = ["INP"]
"manage.py" = ["INP"]
"*/tests/*" = ["T20"]
"boefjes/boefjes/plugins/*" = ["PTH"]
"scripts/*.py" = ["INP001", "T201"]
"cveapi/cveapi.py" = ["INP001"]

[tool.ruff.flake8-tidy-imports]
[tool.ruff.flake8-tidy-imports.banned-api]
"rocky.settings".msg = "Use django.conf.settings"

[tool.codespell]
ignore-words-list = 'edn,juxt'

[tool.poetry]
name = "openkat"
version = "0.0.1.dev1"
description = "OpenKAT Coordination package"
authors = ["MinVWS <maintainer@openkat.nl>"]
license = "EUPL"
readme = "README.rst"

[build-system]
requires = ["poetry-core>=1.0.0","setuptools>=65", "setuptools_scm[toml]>=7.1"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.dependencies]
python = "^3.10"
sphinx = "<8"
sphinx_rtd_theme = "2.0.0"
sphinxcontrib-mermaid = "^0.9.2"
myst-parser = "^2.0.0"
settings-doc = "^3.0.0"
colorama = "0.4.6" # Required on all platforms, not just win32
