[project]
name = "openkat"
version = "2.0.0-alpha"
description = "OpenKAT package"
requires-python = ">=3.12"
readme = "README.md"
license = "EUPL-1.2"
dependencies = [
  "celery[redis]>=5.5.3",
  "django-components==0.88",
  "django-csp>=4.0",
  "django-environ>=0.12.0",
  "django-filter>=25.1",
  "django-password-validators>=1.7.1",
  "django-recurrence>=1.11.1",
  "django-redis>=6.0.0",
  "django-rest-knox>=5.0.2",
  "django-storages>=1.14.6",
  "django-structlog>=9.1.1",
  "django-stubs-ext>=5.2.5",
  "django-tagulous>=2.1.0",
  "django-two-factor-auth[phonenumberslite]>=1.17.0",
  "django-xtdb==0.0.2",
  "django>=5.2.0,<6.0",
  "djangoql>=0.18.1",
  "djangorestframework>=3.16.0",
  "docker>=7.1.0",
  "drf-standardized-errors>=0.14.1",
  "granian>=2.2.6",
  "httpx>=0.27.0",
  "kombu>=5.5.4",
  "psycopg>=3.2.10",
  "pydantic>=2.7.1",
  "structlog>=25.3.0",
  "tldextract>=5.3.0",
  "transit-python2>=0.8.321",
  "whitenoise[brotli]>=6.5.0",
]

[dependency-groups]
dev = [
    # This is used by pytest-xdist to determine the number of physical and logical cores
    "psutil>=7.1.0",
    "pytest-cov>=6.0.0",
    "pytest-django>=4.5.2",
    "pytest-drf>=1.1.3",
    "pytest-env>=1.1.3",
    "pytest-mock>=3.11.1",
    "pytest-xdist>=3.7.0",
    "pytest>=7.4.0",
    # Pytest-common-subject which is needed by pytest-drf still depends on pkg_resources
    "setuptools<81",
    "pytest-celery>=1.2.1",
    "pytest-benchmark>=5.0.1",
]

[tool.uv]
package = true

[tool.uv.sources]
django-xtdb = { git = "https://github.com/dekkers/django-xtdb.git", rev = "main" }
djangoql = { git = "https://github.com/donnype/djangoql.git", rev = "master" }

[build-system]
requires = ["setuptools>=78.1.1", "wheel"]
build-backend = "setuptools.build_meta:__legacy__"

[project.scripts]
openkat = "manage:openkat"

[tool.coverage.run]
relative_files = true
omit = ["octopoes/*"]

[tool.pytest.ini_options]
addopts = "--benchmark-skip --benchmark-columns='min, max, mean, stddev, ops, rounds, iterations' --benchmark-min-rounds=1 --durations=10 -n auto --ignore=tests/integration"
DJANGO_SETTINGS_MODULE = "openkat.settings"
env = [
  "D:OPENKAT_DB_HOST=localhost",
  "D:OPENKAT_XTDB_HOST=localhost",
  "D:OPENKAT_XTDB_PORT=5433",
  "D:DOCKER_NETWORK=openkat-test-plugin-network",
]

[tool.djlint]
max_line_length = 120
blank_line_after_tag = "load,extends,include"
# https://www.djlint.com/docs/linter/#rules
ignore = "H006,H016,H017,H030,H031"


[tool.mypy]
python_version = "3.12"
strict = true
disallow_subclassing_any = false
disallow_untyped_decorators = false
disallow_any_generics = false
disallow_untyped_calls = false
disallow_untyped_defs = false
warn_return_any = false

[[tool.mypy.overrides]]
module = [
# TODO: install django-stubs an typed-django-filters in mypy and fix type errors
  "django.*",
  "django_filters.*",
  "django_otp.*",
  "djangoql.*",
  "environ.*",
  "knox.*",
  "libnmap.*",
  "polars_iptools.*",
  "recurrence.*",
  "rest_framework.*",
  "tagulous.*",
  "transit.*",
  "two_factor.*",
  "whitenoise.*",
]
ignore_missing_imports = true


[tool.setuptools_scm]
write_to = "_version.py"


[tool.ruff]
fix = true

# Exclude a variety of commonly ignored directories.
extend-exclude = [
  "__pycache__"
]

line-length = 120

# Support Python 3.12 and higher
target-version = "py312"

[tool.ruff.format]
skip-magic-trailing-comma = true

[tool.ruff.lint]
# Enable classic flake8, pyflakes, eradicate, and tidyimport
# To be extended with DJ, PT, RUF, C90, D, PL, RET
select = ["E", "F", "ERA", "W", "TID", "I", "G", "INP", "T20", "UP", "ISC", "PTH", "SIM", "PLC", "A", "S"]
ignore = [
  "A003", # Built-in shadowing is usually not a problem and some built-ins have very generic names
  "SIM103", # Creating long return statements is often less readable
  "SIM108", # Ternary operator is not always more readable
  "S101", # Assert use is normal in pytest tests
  "S104", # Binding to all is normal in containers
  "S105", # Disabled because of false positives
  "S106", # Disabled because of false positives
  "S308", # Mark_safe usage is okay
  "S324", # Insecure hash functions can still be useful
  "S603", # Disabled because of false positives
  "S607", # Disabled because of false positives
  "ERA001" # TODO: Enable when we fixed all the TODOs with commented out code
]

# Add "Example" to allowed code comments
task-tags = ["Example", "todo", "TODO", "FIXME"]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401","F403"]
"whitelist.py" = ["F821", "INP"]
"*/migrations/*.py" = ["E501"]
"*/packaging/*" = ["INP"]
"*/.ci/*" = ["INP"]
"conf.py" = ["INP", "PTH", "A"]
"conftest.py" = ["INP"]
"setup.py" = ["INP"]
"manage.py" = ["INP"]
"tests/*" = ["T20"]
"scripts/*.py" = ["INP001", "T201"]

[tool.ruff.lint.flake8-tidy-imports.banned-api]
"openkat.settings".msg = "Use django.conf.settings"

[tool.ruff.lint.isort]
split-on-trailing-comma = false

[tool.codespell]
ignore-words-list = 'EDE,assertIn'
